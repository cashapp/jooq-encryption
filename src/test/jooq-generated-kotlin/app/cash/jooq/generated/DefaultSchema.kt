/*
 * This file is generated by jOOQ.
 */
package app.cash.jooq.generated


import app.cash.jooq.generated.tables.EncryptedCustomers
import app.cash.jooq.generated.tables.ForcedTypeCustomers
import app.cash.jooq.generated.tables.UnprotectedCustomers

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * The schema <code>PUBLIC</code>.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>ENCRYPTED_CUSTOMERS</code>.
     */
    val ENCRYPTED_CUSTOMERS: EncryptedCustomers get() = EncryptedCustomers.ENCRYPTED_CUSTOMERS

    /**
     * The table <code>FORCED_TYPE_CUSTOMERS</code>.
     */
    val FORCED_TYPE_CUSTOMERS: ForcedTypeCustomers get() = ForcedTypeCustomers.FORCED_TYPE_CUSTOMERS

    /**
     * The table <code>UNPROTECTED_CUSTOMERS</code>.
     */
    val UNPROTECTED_CUSTOMERS: UnprotectedCustomers get() = UnprotectedCustomers.UNPROTECTED_CUSTOMERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        EncryptedCustomers.ENCRYPTED_CUSTOMERS,
        ForcedTypeCustomers.FORCED_TYPE_CUSTOMERS,
        UnprotectedCustomers.UNPROTECTED_CUSTOMERS
    )
}
